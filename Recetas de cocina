import sqlite3
import sys

DATABASE = 'recetas.db'

def connect_db():
    return sqlite3.connect(DATABASE)

def setup_db():
    with connect_db() as conn:
        cursor = conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS recetas (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                nombre TEXT NOT NULL
            )
        ''')
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS ingredientes (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                receta_id INTEGER,
                ingrediente TEXT NOT NULL,
                FOREIGN KEY (receta_id) REFERENCES recetas(id)
            )
        ''')
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS pasos (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                receta_id INTEGER,
                paso TEXT NOT NULL,
                FOREIGN KEY (receta_id) REFERENCES recetas(id)
            )
        ''')
        conn.commit()

def agregar_receta():
    nombre = input('Nombre de la receta: ')
    with connect_db() as conn:
        cursor = conn.cursor()
        cursor.execute('INSERT INTO recetas (nombre) VALUES (?)', (nombre,))
        receta_id = cursor.lastrowid
        while True:
            ingrediente = input('Agregar ingrediente (o dejar vacío para terminar): ')
            if not ingrediente:
                break
            cursor.execute('INSERT INTO ingredientes (receta_id, ingrediente) VALUES (?, ?)', (receta_id, ingrediente))
        while True:
            paso = input('Agregar paso (o dejar vacío para terminar): ')
            if not paso:
                break
            cursor.execute('INSERT INTO pasos (receta_id, paso) VALUES (?, ?)', (receta_id, paso))
        conn.commit()
    print('Receta agregada exitosamente.')

def actualizar_receta():
    id_receta = int(input('ID de la receta a actualizar: '))
    nombre = input('Nuevo nombre de la receta (dejar en blanco para no cambiar): ')
    with connect_db() as conn:
        cursor = conn.cursor()
        if nombre:
            cursor.execute('UPDATE recetas SET nombre = ? WHERE id = ?', (nombre, id_receta))
        while True:
            ingrediente = input('Actualizar ingrediente (o dejar vacío para terminar): ')
            if not ingrediente:
                break
            cursor.execute('INSERT OR REPLACE INTO ingredientes (receta_id, ingrediente) VALUES (?, ?)', (id_receta, ingrediente))
        while True:
            paso = input('Actualizar paso (o dejar vacío para terminar): ')
            if not paso:
                break
            cursor.execute('INSERT OR REPLACE INTO pasos (receta_id, paso) VALUES (?, ?)', (id_receta, paso))
        conn.commit()
    print('Receta actualizada exitosamente.')

def eliminar_receta():
    id_receta = int(input('ID de la receta a eliminar: '))
    with connect_db() as conn:
        cursor = conn.cursor()
        cursor.execute('DELETE FROM recetas WHERE id = ?', (id_receta,))
        cursor.execute('DELETE FROM ingredientes WHERE receta_id = ?', (id_receta,))
        cursor.execute('DELETE FROM pasos WHERE receta_id = ?', (id_receta,))
        conn.commit()
    print('Receta eliminada exitosamente.')

def ver_listado_recetas():
    with connect_db() as conn:
        cursor = conn.cursor()
        cursor.execute('SELECT id, nombre FROM recetas')
        recetas = cursor.fetchall()
        for receta in recetas:
            print(f'ID: {receta[0]}, Nombre: {receta[1]}')

def buscar_ingredientes_pasos():
    id_receta = int(input('ID de la receta para buscar ingredientes y pasos: '))
    with connect_db() as conn:
        cursor = conn.cursor()
        cursor.execute('SELECT ingrediente FROM ingredientes WHERE receta_id = ?', (id_receta,))
        ingredientes = cursor.fetchall()
        cursor.execute('SELECT paso FROM pasos WHERE receta_id = ?', (id_receta,))
        pasos = cursor.fetchall()
        print('Ingredientes:')
        for ingrediente in ingredientes:
            print(f'- {ingrediente[0]}')
        print('Pasos:')
        for paso in pasos:
            print(f'- {paso[0]}')

def main():
    setup_db()
    while True:
        print('\nOpciones:')
        print('a) Agregar nueva receta')
        print('c) Actualizar receta existente')
        print('d) Eliminar receta existente')
        print('e) Ver listado de recetas')
        print('f) Buscar ingredientes y pasos de receta')
        print('g) Salir')
        opcion = input('Seleccione una opción: ')
        if opcion == 'a':
            agregar_receta()
        elif opcion == 'c':
            actualizar_receta()
        elif opcion == 'd':
            eliminar_receta()
        elif opcion == 'e':
            ver_listado_recetas()
        elif opcion == 'f':
            buscar_ingredientes_pasos()
        elif opcion == 'g':
            print('Saliendo...')
            sys.exit()
        else:
            print('Opción no válida.')

if __name__ == '__main__':
    main()
