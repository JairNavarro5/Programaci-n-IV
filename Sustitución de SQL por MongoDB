from pymongo import MongoClient
import sys

DATABASE_NAME = 'recetas_db'
COLLECTION_RECETAS = 'recetas'
COLLECTION_INGREDIENTES = 'ingredientes'
COLLECTION_PASOS = 'pasos'

def connect_db():
    client = MongoClient('mongodb://localhost:27017/')  # Cambia si tu servidor MongoDB está en otro host o puerto
    db = client[DATABASE_NAME]
    return db

def agregar_receta(db):
    nombre = input('Nombre de la receta: ')
    if not nombre:
        print('El nombre de la receta no puede estar vacío.')
        return

    receta_id = db[COLLECTION_RECETAS].insert_one({'nombre': nombre}).inserted_id

    while True:
        ingrediente = input('Agregar ingrediente (o dejar vacío para terminar): ')
        if not ingrediente:
            break
        db[COLLECTION_INGREDIENTES].insert_one({'receta_id': receta_id, 'ingrediente': ingrediente})

    while True:
        paso = input('Agregar paso (o dejar vacío para terminar): ')
        if not paso:
            break
        db[COLLECTION_PASOS].insert_one({'receta_id': receta_id, 'paso': paso})

    print('Receta agregada exitosamente.')

def actualizar_receta(db):
    try:
        receta_id = input('ID de la receta a actualizar: ')
        if not receta_id:
            print('ID inválido.')
            return

        receta = db[COLLECTION_RECETAS].find_one({'_id': receta_id})
        if not receta:
            print('Receta no encontrada.')
            return

        nombre = input('Nuevo nombre de la receta (dejar en blanco para no cambiar): ')
        if nombre:
            db[COLLECTION_RECETAS].update_one({'_id': receta_id}, {'$set': {'nombre': nombre}})

        while True:
            ingrediente = input('Actualizar ingrediente (o dejar vacío para terminar): ')
            if not ingrediente:
                break
            db[COLLECTION_INGREDIENTES].update_one(
                {'receta_id': receta_id, 'ingrediente': ingrediente},
                {'$set': {'ingrediente': ingrediente}},
                upsert=True
            )

        while True:
            paso = input('Actualizar paso (o dejar vacío para terminar): ')
            if not paso:
                break
            db[COLLECTION_PASOS].update_one(
                {'receta_id': receta_id, 'paso': paso},
                {'$set': {'paso': paso}},
                upsert=True
            )

    print('Receta actualizada exitosamente.')

def eliminar_receta(db):
    try:
        receta_id = input('ID de la receta a eliminar: ')
        if not receta_id:
            print('ID inválido.')
            return

        receta = db[COLLECTION_RECETAS].find_one({'_id': receta_id})
        if not receta:
            print('Receta no encontrada.')
            return

        db[COLLECTION_RECETAS].delete_one({'_id': receta_id})
        db[COLLECTION_INGREDIENTES].delete_many({'receta_id': receta_id})
        db[COLLECTION_PASOS].delete_many({'receta_id': receta_id})

        print('Receta eliminada exitosamente.')

def ver_listado_recetas(db):
    recetas = db[COLLECTION_RECETAS].find()
    if recetas:
        for receta in recetas:
            print(f'ID: {receta["_id"]}, Nombre: {receta["nombre"]}')
    else:
        print('No hay recetas en la base de datos.')

def buscar_ingredientes_pasos(db):
    receta_id = input('ID de la receta para buscar ingredientes y pasos: ')
    if not receta_id:
        print('ID inválido.')
        return

    receta = db[COLLECTION_RECETAS].find_one({'_id': receta_id})
    if not receta:
        print('Receta no encontrada.')
        return

    print('Ingredientes:')
    ingredientes = db[COLLECTION_INGREDIENTES].find({'receta_id': receta_id})
    if ingredientes:
        for ingrediente in ingredientes:
            print(f'- {ingrediente["ingrediente"]}')
    else:
        print('No hay ingredientes para esta receta.')

    print('Pasos:')
    pasos = db[COLLECTION_PASOS].find({'receta_id': receta_id})
    if pasos:
        for paso in pasos:
            print(f'- {paso["paso"]}')
    else:
        print('No hay pasos para esta receta.')

def main():
    db = connect_db()
    while True:
        print('\nOpciones:')
        print('a) Agregar nueva receta')
        print('c) Actualizar receta existente')
        print('d) Eliminar receta existente')
        print('e) Ver listado de recetas')
        print('f) Buscar ingredientes y pasos de receta')
        print('g) Salir')
        opcion = input('Seleccione una opción: ')
        if opcion == 'a':
            agregar_receta(db)
        elif opcion == 'c':
            actualizar_receta(db)
        elif opcion == 'd':
            eliminar_receta(db)
        elif opcion == 'e':
            ver_listado_recetas(db)
        elif opcion == 'f':
            buscar_ingredientes_pasos(db)
        elif opcion == 'g':
            print('Saliendo...')
            sys.exit()
        else:
            print('Opción no válida.')

if __name__ == '__main__':
    main()
